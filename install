#!/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ruby
require 'fileutils'

MACSTRAP_REPO = 'https://github.com/kevinbungeneers/MacStrap.git'

module Tty extend self
  def blue; bold 34; end
  def white; bold 39; end
  def red; underline 31; end
  def reset; escape 0; end
  def bold n; escape "1;#{n}" end
  def underline n; escape "4;#{n}" end
  def escape n; "\033[#{n}m" if STDOUT.tty? end
end

class Array
  def shell_s
    cp = dup
    first = cp.shift
    cp.map{ |arg| arg.gsub " ", "\\ " }.unshift(first) * " "
  end
end

def tell *args
  puts "#{Tty.blue}==>#{Tty.whie} #{args.shell_s}#{Tty.reset}"
end

def warn warning
  puts "#{Tty.red}#{warning.chomp}#{Tty.reset}"
end

def system *args
  abort "Failed during: #{args.shell_s}" unless Kernel.system(*args)
end

def has cmd
  return Kernel.system "/usr/bin/which -s #{cmd}"
end

homedir = File.expand_path "~"
installPath = "#{homedir}/.macstrap"

unless File.directory?(installPath)
  FileUtils.mkdir_p(installPath)
end

Dir.chdir installPath do
  unless has 'brew'
    system "ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\""
  end

  unless has 'ansible'
    system "brew", "install", "ansible"
  end

  system "git", "init", "-q"
  system "git", "config", "remote.origin.url", MACSTRAP_REPO
  system "git", "config", "remote.origin.fetch", "+refs/heads/*:refs/remotes/origin/*"
  system "git", "fetch", "origin", "master:refs/remotes/origin/master", "-n"
  system "git", "reset", "--hard", "origin/master"

  system "ansible-playbook", "macstrap.yml", "--ask-sudo-pass"
end
